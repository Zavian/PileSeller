--- File where will be stored all the tokens available for the classess
local PileSeller = _G.PileSeller
local tiers = {
	VANILLA = {
		22349,
		22350,
		22351,
		22352,
		22353,
		22354,
		22355,
		22356,
		22357,
		22358,
		22359,
		22360,
		22361,
		22362,
		22363,
		22364,
		22365,
		22366,
		22367,
		22368,
		22369,
		22370,
		22371,
		22372,
	},
	TBC = {
		29753,
		29754,
		29755,
		29756,
		29757,
		29758,
		29759,
		29760,
		29761,
		29762,
		29763,
		29764,
		29765,
		29766,
		29767,
		30236,
		30237,
		30238,
		30239,
		30240,
		30241,
		30242,
		30243,
		30244,
		30245,
		30246,
		30247,
		30248,
		30249,
		30250,
		31089,
		31090,
		31091,
		31092,
		31093,
		31094,
		31095,
		31096,
		31097,
		31098,
		31099,
		31100,
		31101,
		31102,
		31103,
		34848,
		34851,
		34852,
		34853,
		34854,
		34855,
		34856,
		34857,
		34858,
	},
	WOTLK = {
		40610,
		40611,
		40612,
		40613,
		40614,
		40615,
		40616,
		40617,
		40618,
		40619,
		40620,
		40621,
		40622,
		40623,
		40624,
		40625,
		40626,
		40627,
		40628,
		40629,
		40630,
		40631,
		40632,
		40633,
		40634,
		40635,
		40636,
		40637,
		40638,
		40639,
		45632,
		45633,
		45634,
		45635,
		45636,
		45637,
		45638,
		45639,
		45640,
		45641,
		45642,
		45643,
		45644,
		45645,
		45646,
		45647,
		45648,
		45649,
		45650,
		45651,
		45652,
		45653,
		45654,
		45655,
		45656,
		45657,
		45658,
		45659,
		45660,
		45661,
		47557,
		47558,
		47559,
		52025,
		52026,
		52027,
		52028,
		52029,
		52030,
	},
	CATA = {
		63682,
		63683,
		63684,
		64314,
		64315,
		64316,
		65000,
		65001,
		65002,
		65087,
		65088,
		65089,
		66998,
		67423,
		67424,
		67425,
		67426,
		67427,
		67428,
		67429,
		67430,
		67431,
		71668,
		71669,
		71670,
		71671,
		71672,
		71673,
		71674,
		71675,
		71676,
		71677,
		71678,
		71679,
		71680,
		71681,
		71682,
		71683,
		71684,
		71685,
		71686,
		71687,
		71688,
		78170,
		78171,
		78172,
		78173,
		78174,
		78175,
		78176,
		78177,
		78178,
		78179,
		78180,
		78181,
		78182,
		78183,
		78184,
		78847,
		78848,
		78849,
		78850,
		78851,
		78852,
		78853,
		78854,
		78855,
		78856,
		78857,
		78858,
		78859,
		78860,
		78861,
		78862,
		78863,
		78864,
		78865,
		78866,
		78867,
		78868,
		78869,
		78870,
		78871,
		78872,
		78873,
		78874,
		78875,
		78876,
	},
	MOP = {
		89234,
		89235,
		89236,
		89237,
		89238,
		89239,
		89240,
		89241,
		89242,
		89243,
		89244,
		89245,
		89246,
		89247,
		89248,
		89249,
		89250,
		89251,
		89252,
		89253,
		89254,
		89255,
		89256,
		89257,
		89258,
		89259,
		89260,
		89261,
		89262,
		89263,
		89264,
		89265,
		89266,
		89267,
		89268,
		89269,
		89270,
		89271,
		89272,
		89273,
		89274,
		89275,
		89276,
		89277,
		89278,
		95569,
		95570,
		95571,
		95572,
		95573,
		95574,
		95575,
		95576,
		95577,
		95578,
		95579,
		95580,
		95581,
		95582,
		95583,
		95822,
		95823,
		95824,
		95855,
		95856,
		95857,
		95879,
		95880,
		95881,
		95887,
		95888,
		95889,
		95955,
		95956,
		95957,
		96566,
		96567,
		96568,
		96599,
		96600,
		96601,
		96623,
		96624,
		96625,
		96631,
		96632,
		96633,
		96699,
		96700,
		96701,
		99667,
		99668,
		99669,
		99670,
		99671,
		99672,
		99673,
		99674,
		99675,
		99676,
		99677,
		99678,
		99679,
		99680,
		99681,
		99682,
		99683,
		99684,
		99685,
		99686,
		99687,
		99688,
		99689,
		99690,
		99691,
		99692,
		99693,
		99694,
		99695,
		99696,
		99712,
		99713,
		99714,
		99715,
		99716,
		99717,
		99718,
		99719,
		99720,
		99721,
		99722,
		99723,
		99724,
		99725,
		99726,
		99742,
		99743,
		99744,
		99745,
		99746,
		99747,
		99748,
		99749,
		99750,
		99751,
		99752,
		99753,
		99754,
		99755,
		99756,
		105857,
		105858,
		105859,
		105860,
		105861,
		105862,
		105863,
		105864,
		105865,
		105866,
		105867,
		105868,
	},
	WOD = {
		119305,
		119306,
		119307,
		119308,
		119309,
		119311,
		119312,
		119313,
		119314,
		119315,
		119318,
		119319,
		119320,
		119321,
		120212,
		120213,
		120214,
		120215,
		120216,
		120217,
		120218,
		120219,
		120220,
		120221,
		120222,
		120223,
		120224,
		120225,
		120226,
		120227,
		120228,
		120229,
		120230,
		120231,
		120232,
		120233,
		120234,
		120235,
		120236,
		120237,
		120238,
		120239,
		120240,
		120241,
		120242,
		120243,
		120244,
		120245,
		120246,
		120247,
		120248,
		120249,
		120250,
		120251,
		120252,
		120253,
		120254,
		120255,
		120256,
		127953,
		127954,
		127955,
		127956,
		127957,
		127958,
		127959,
		127960,
		127961,
		127962,
		127963,
		127964,
		127965,
		127966,
		127967,
	}
}

local artifacts = {
	--"Darkened T'uure" = 136858, ???
	--PALADIN_HOLY = 139621, ???
	demonhunter = {
		[1] = {id = 127829, name = _G["ARTIFACT_DEMONHUNTER_HAVOC_WEAPONNAME"]},	-- HAVOC
		[2] = {id = 128832, name = _G["ARTIFACT_DEMONHUNTER_VENGEANCE_WEAPONNAME"]},	-- VENGEANCE
	},
	dk = {
		[1] = {id = 128402, name = _G["ARTIFACT_DK_BLOOD"]},	-- BLOOD
		[2] = {id = 128293, name = _G["ARTIFACT_DK_FROST"]},	-- FROST
		[3] = {id = 128403, name = _G["ARTIFACT_DK_UNHOLY"]},	-- UNHOLY
	},
	druid = {
		[1] = {id = 128858, name = _G["ARTIFACT_DRUID_BALANCE"]},	-- BALANCE
		[2] = {id = 128859, name = _G["ARTIFACT_DRUID_FERAL"]},	-- FERAL
		[3] = {id = 128821, name = _G["ARTIFACT_DRUID_GUARDIAN"]},	-- GUARDIAN
		[4] = {id = 128306, name = _G["ARTIFACT_DRUID_RESTO_WEAPONNAME"]},	-- RESTORATION
	},
	hunter = {
		[1] = {id = 128861, name = _G["ARTIFACT_HUNTER_BEAST_WEAPONNAME"]},	-- BEASTMASTER
		[2] = {id = 128826, name = _G["ARTIFACT_HUNTER_MARKS_WEAPONNAME"]},	-- MM
		[3] = {id = 128808, name = _G["ARTIFACT_HUNTER_SURV_WEAPONNAME"]},	-- SURVI
	},
	mage = {
		[1] = {id = 127857, name = _G["ARTIFACT_MAGE_ARCANE"]},	-- ARCANE
		[2] = {id = 128820, name = _G["ARTIFACT_MAGE_FIRE"]},	-- FIRE
		[3] = {id = 128862, name = _G["ARTIFACT_MAGE_FROST"]},	-- FROST
	},
	monk = {
		[1] = {id = 128938, name = _G["ARTIFACT_MONK_BREWMASTER1"] .. ", " .. _G["ARTIFACT_MONK_BREWMASTER2"]},	-- BW
		[2] = {id = 128937, name = _G["ARTIFACT_MONK_MISTWEAVER_WEAPONNAME"]},	-- MW
		[3] = {id = 128940, name = _G["ARTIFACT_MONK_WW"]},	-- WW
	},
	paladin = {
		[1] = {id = 128823, name = _G["ARTIFACT_PALADIN_HOLY_WEAPONNAME"]},	-- HOLY
		[2] = {id = 128867, name = _G["ARTIFACT_PALADIN_PROT_WEAPONNAME"]},	-- PROT
		[3] = {id = 137582, name = _G["ARTIFACT_PALADIN_RET_WEAPONNAME"]},	-- RETRI
	},
	priest = {
		[1] = {id = 128868, name = _G["ARTIFACT_PRIEST_DISCIPLINE"]},	-- DISC
		[2] = {id = 128825, name = _G["ARTIFACT_PRIEST_HOLY_1"] .. ", " .. _G["ARTIFACT_PRIEST_HOLY_2"]},	-- HOLY
		[3] = {id = 128827, name = _G["ARTIFACT_PRIEST_SHADOW_WEAPONNAME"]},	-- SHADOW
	},
	rogue = {
		[1] = {id = 128870, name = _G["ARTIFACT_ROGUE_ASSASSINATION_WEAPONNAME"]},	-- ASSA
		[2] = {id = 128872, name = _G["ARTIFACT_ROGUE_OUTLAW_WEAPONNAME"]},	-- OUTLAW
		[3] = {id = 128476, name = _G["ARTIFACT_ROGUE_SUBTLETY_WEAPONNAME"]},	-- SUB
	},
	shaman = {
		[1] = {id = 128935, name = _G["ARTIFACT_SHAMAN_ELEMENTAL_WEAPONNAME"]},	-- ELE
		[2] = {id = 128819, name = _G["ARTIFACT_SHAMAN_ENHANCEMENT_WEAPONNAME"]},	-- ENHA
		[3] = {id = 128911, name = _G["ARTIFACT_SHAMAN_RESTORATION_WEAPONNAME"]},	-- RESTO
	},
	warlock = {
		[1] = {id = 128942, name = _G["ARTIFACT_WARLOCK_AFFLICTION"] .. " " .. _G["ARTIFACT_WARLOCK_AFFLICTION_2"]},	-- AFFLI
		[2] = {id = 128943, name = _G["ARTIFACT_WARLOCK_DEMO"]},	-- DEMO
		[3] = {id = 128941, name = _G["ARTIFACT_WARLOCK_DEST"]},	-- DESTRO
	},
	warrior = {
		[1] = {id = 128910, name = _G["ARTIFACT_WARRIOR_ARMS_WEAPONNAME"]}, -- ARMS
		[2] = {id = 128908, name = _G["ARTIFACT_WARRIOR_FURY_WEAPONNAME"]}, -- FURY
		[3] = {id = 128289, name = _G["ARTIFACT_WARRIOR_PROT_WEAPONNAME"] .. " " .._G["ARTIFACT_WARRIOR_PROT_WEAPONNAME_SECOND"] }, -- PROTECTION
	},	
}


function PileSeller:IsTier(level, id)
	level = tonumber(level)
	id = tonumber(id)
	local expansion = ""
	if level < 60 then return false
	elseif level == 60 then expansion = "VANILLA"
	elseif level == 70 then expansion = "TBC"
	elseif level == 80 then expansion = "WOTLK"
	elseif level == 85 then expansion = "CATA"
	elseif level == 90 then expansion = "MOP"
	elseif level == 100 then expansion = "WOD"
	end --elseif level == "110" then expansion = "LEGION"

	for i = 1, #tiers[expansion] do
		if tiers[expansion][i] == id then return true end
	end	
	return false
end

function PileSeller:GetArtifactByClassAndSpec(class, spec)
	return artifacts[class:lower()][spec]
end

function PileSeller:LoadArtifacts()
    local returner = 0
    local playerClass = select(2, UnitClass("player"))
    for i = 1, #artifacts[playerClass:lower()] do
        if i == GetSpecialization() then returner = artifacts[playerClass:lower()][i] end
        GetItemInfo(artifacts[playerClass:lower()][i].id)
        PileSeller:debugprint("Loaded: " .. artifacts[playerClass:lower()][i].id .. ". " .. playerClass:lower())
    end
    --PileSeller:debugprint("Returning: " .. returner)
    return returner 
end


